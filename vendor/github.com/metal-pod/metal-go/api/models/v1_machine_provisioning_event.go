// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1MachineProvisioningEvent v1 machine provisioning event
// swagger:model v1.MachineProvisioningEvent
type V1MachineProvisioningEvent struct {

	// the event emitted by the machine
	// Required: true
	Event *string `json:"event"`

	// an additional message to add to the event
	Message string `json:"message,omitempty"`

	// the time that this event was received
	// Read Only: true
	// Format: date-time
	Time strfmt.DateTime `json:"time,omitempty"`
}

// Validate validates this v1 machine provisioning event
func (m *V1MachineProvisioningEvent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEvent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1MachineProvisioningEvent) validateEvent(formats strfmt.Registry) error {

	if err := validate.Required("event", "body", m.Event); err != nil {
		return err
	}

	return nil
}

func (m *V1MachineProvisioningEvent) validateTime(formats strfmt.Registry) error {

	if swag.IsZero(m.Time) { // not required
		return nil
	}

	if err := validate.FormatOf("time", "body", "date-time", m.Time.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1MachineProvisioningEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1MachineProvisioningEvent) UnmarshalBinary(b []byte) error {
	var res V1MachineProvisioningEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
