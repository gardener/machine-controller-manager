// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/metal-pod/metal-go/api/models"
)

// CreateNetworkReader is a Reader for the CreateNetwork structure.
type CreateNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateNetworkCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 409:
		result := NewCreateNetworkConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCreateNetworkDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateNetworkCreated creates a CreateNetworkCreated with default headers values
func NewCreateNetworkCreated() *CreateNetworkCreated {
	return &CreateNetworkCreated{}
}

/*CreateNetworkCreated handles this case with default header values.

Created
*/
type CreateNetworkCreated struct {
	Payload *models.V1NetworkResponse
}

func (o *CreateNetworkCreated) Error() string {
	return fmt.Sprintf("[PUT /v1/network][%d] createNetworkCreated  %+v", 201, o.Payload)
}

func (o *CreateNetworkCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1NetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNetworkConflict creates a CreateNetworkConflict with default headers values
func NewCreateNetworkConflict() *CreateNetworkConflict {
	return &CreateNetworkConflict{}
}

/*CreateNetworkConflict handles this case with default header values.

Conflict
*/
type CreateNetworkConflict struct {
	Payload *models.HttperrorsHTTPErrorResponse
}

func (o *CreateNetworkConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/network][%d] createNetworkConflict  %+v", 409, o.Payload)
}

func (o *CreateNetworkConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HttperrorsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNetworkDefault creates a CreateNetworkDefault with default headers values
func NewCreateNetworkDefault(code int) *CreateNetworkDefault {
	return &CreateNetworkDefault{
		_statusCode: code,
	}
}

/*CreateNetworkDefault handles this case with default header values.

Error
*/
type CreateNetworkDefault struct {
	_statusCode int

	Payload *models.HttperrorsHTTPErrorResponse
}

// Code gets the status code for the create network default response
func (o *CreateNetworkDefault) Code() int {
	return o._statusCode
}

func (o *CreateNetworkDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/network][%d] createNetwork default  %+v", o._statusCode, o.Payload)
}

func (o *CreateNetworkDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HttperrorsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
