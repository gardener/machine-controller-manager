#!/bin/bash
#
# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -o errexit
set -o nounset
set -o pipefail

# setup virtual GOPATH
source $(dirname $0)/vgopath-setup.sh

CODE_GEN_DIR=$(go list -m -f '{{.Dir}}' k8s.io/code-generator)

# We need to explicitly pass GO111MODULE=off to k8s.io/code-generator as it is significantly slower otherwise,
# see https://github.com/kubernetes/code-generator/issues/100.
export GO111MODULE=off

rm -f ${GOPATH}/bin/*-gen

CURRENT_DIR=$(dirname $0)
PROJECT_ROOT="${CURRENT_DIR}"/..
export PROJECT_ROOT

bash "${CODE_GEN_DIR}"/generate-internal-groups.sh \
  deepcopy,defaulter,conversion,client,lister,informer \
  github.com/gardener/machine-controller-manager/pkg/client \
  github.com/gardener/machine-controller-manager/pkg/apis \
  github.com/gardener/machine-controller-manager/pkg/apis \
  "machine:v1alpha1" \
  -h "${PROJECT_ROOT}/hack/LICENSE_BOILERPLATE.txt"

echo "Generating openapi definitions"
rm -Rf ./${PROJECT_ROOT}/openapi/openapi_generated.go
${GOPATH}/bin/openapi-gen "$@" \
  --v 1 \
  --logtostderr \
  --input-dirs=github.com/gardener/machine-controller-manager/pkg/apis/machine/v1alpha1 \
  --input-dirs=k8s.io/api/core/v1 \
  --input-dirs=k8s.io/apimachinery/pkg/apis/meta/v1 \
  --input-dirs=k8s.io/apimachinery/pkg/api/resource \
  --input-dirs=k8s.io/apimachinery/pkg/types \
  --input-dirs=k8s.io/apimachinery/pkg/version \
  --input-dirs=k8s.io/apimachinery/pkg/runtime \
  --output-package=github.com/gardener/machine-controller-manager/pkg/openapi \
  -h "${PROJECT_ROOT}/hack/LICENSE_BOILERPLATE.txt"
