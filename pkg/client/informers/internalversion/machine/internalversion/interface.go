// This file was automatically generated by informer-gen

package internalversion

import (
	internalinterfaces "github.com/gardener/node-controller-manager/pkg/client/informers/internalversion/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// AWSMachineClasses returns a AWSMachineClassInformer.
	AWSMachineClasses() AWSMachineClassInformer
	// AzureMachineClasses returns a AzureMachineClassInformer.
	AzureMachineClasses() AzureMachineClassInformer
	// Machines returns a MachineInformer.
	Machines() MachineInformer
	// MachineDeployments returns a MachineDeploymentInformer.
	MachineDeployments() MachineDeploymentInformer
	// MachineSets returns a MachineSetInformer.
	MachineSets() MachineSetInformer
	// MachineTemplates returns a MachineTemplateInformer.
	MachineTemplates() MachineTemplateInformer
}

type version struct {
	internalinterfaces.SharedInformerFactory
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory) Interface {
	return &version{f}
}

// AWSMachineClasses returns a AWSMachineClassInformer.
func (v *version) AWSMachineClasses() AWSMachineClassInformer {
	return &aWSMachineClassInformer{factory: v.SharedInformerFactory}
}

// AzureMachineClasses returns a AzureMachineClassInformer.
func (v *version) AzureMachineClasses() AzureMachineClassInformer {
	return &azureMachineClassInformer{factory: v.SharedInformerFactory}
}

// Machines returns a MachineInformer.
func (v *version) Machines() MachineInformer {
	return &machineInformer{factory: v.SharedInformerFactory}
}

// MachineDeployments returns a MachineDeploymentInformer.
func (v *version) MachineDeployments() MachineDeploymentInformer {
	return &machineDeploymentInformer{factory: v.SharedInformerFactory}
}

// MachineSets returns a MachineSetInformer.
func (v *version) MachineSets() MachineSetInformer {
	return &machineSetInformer{factory: v.SharedInformerFactory}
}

// MachineTemplates returns a MachineTemplateInformer.
func (v *version) MachineTemplates() MachineTemplateInformer {
	return &machineTemplateInformer{factory: v.SharedInformerFactory}
}
