// This file was automatically generated by lister-gen

package machine

import (
	machine "github.com/gardener/node-controller-manager/pkg/apis/machine"
	"k8s.io/apimachinery/pkg/api/errors"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MachineDeploymentLister helps list MachineDeployments.
type MachineDeploymentLister interface {
	// List lists all MachineDeployments in the indexer.
	List(selector labels.Selector) (ret []*machine.MachineDeployment, err error)
	// Get retrieves the MachineDeployment from the index for a given name.
	Get(name string) (*machine.MachineDeployment, error)
	MachineDeploymentListerExpansion
}

// machineDeploymentLister implements the MachineDeploymentLister interface.
type machineDeploymentLister struct {
	indexer cache.Indexer
}

// NewMachineDeploymentLister returns a new MachineDeploymentLister.
func NewMachineDeploymentLister(indexer cache.Indexer) MachineDeploymentLister {
	return &machineDeploymentLister{indexer: indexer}
}

// List lists all MachineDeployments in the indexer.
func (s *machineDeploymentLister) List(selector labels.Selector) (ret []*machine.MachineDeployment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*machine.MachineDeployment))
	})
	return ret, err
}

// Get retrieves the MachineDeployment from the index for a given name.
func (s *machineDeploymentLister) Get(name string) (*machine.MachineDeployment, error) {
	key := &machine.MachineDeployment{ObjectMeta: v1.ObjectMeta{Name: name}}
	obj, exists, err := s.indexer.Get(key)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(machine.Resource("machinedeployment"), name)
	}
	return obj.(*machine.MachineDeployment), nil
}
