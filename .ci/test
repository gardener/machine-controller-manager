#!/usr/bin/env bash

# Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

# For the test step concourse will set the following environment variables:
# SOURCE_PATH - path to component repository root directory.

if [[ $(uname) == 'Darwin' ]]; then
  READLINK_BIN="greadlink"
else
  READLINK_BIN="readlink"
fi

if [[ -z "${SOURCE_PATH}" ]]; then
  export SOURCE_PATH="$(${READLINK_BIN} -f $(dirname ${0})/..)"
else
  export SOURCE_PATH="$(${READLINK_BIN} -f "${SOURCE_PATH}")"
fi

cd "${SOURCE_PATH}"

# Install Ginkgo (test framework) to be able to execute the tests.
echo "Fetching Ginkgo frawework"
GO111MODULE=off go get -u github.com/onsi/ginkgo/ginkgo
echo "Successfully fetched Ginkgo frawework"

##############################################################################

function test_with_coverage() {
  local output_dir=test/output
  local coverprofile_file=coverprofile.out
  mkdir -p test/output
  GO111MODULE=on ginkgo $GINKGO_COMMON_FLAGS --coverprofile ${coverprofile_file} -covermode=set -outputdir ${output_dir} ${TEST_PACKAGES}

  sed -i -e '/mode: set/d' ${output_dir}/${coverprofile_file}
  {( echo "mode: set"; cat ${output_dir}/${coverprofile_file} )} > ${output_dir}/${coverprofile_file}.temp
  mv ${output_dir}/${coverprofile_file}.temp ${output_dir}/${coverprofile_file}
  GO111MODULE=on GOFLAGS="-mod=vendor" go tool cover -func ${output_dir}/${coverprofile_file}
}

###############################################################################

if [[ "${SKIP_UNIT_TESTS}" != "" ]]; then
  echo ">>>>>Skipping unit tests"
else
  echo ">>>>> Invoking unit tests"
  TEST_PACKAGES="cmd pkg"
  GINKGO_COMMON_FLAGS="-r -timeout=1h0m0s --randomizeAllSpecs --randomizeSuites --failOnPending  --progress -mod=vendor"
  test_with_coverage
  echo ">>>>> Finished executing unit tests"
fi

if [[ "${SKIP_INTEGRATION_TESTS}" != "" ]]; then
  echo ">>>>> Skipping integration tests"
else
  echo ">>>>> Invoking intergration tests"
  .ci/integration-tests
  echo ">>>>> Finished executing integration tests"
fi

#TODO: return success failure properly
echo "CI tests have passed successfully"
